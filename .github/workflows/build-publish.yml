name: Build and Publish
on: [push]

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NUGET_DIR: ${{ github.workspace }}/nuget

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup .Net
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Restore Nuget Packages
      run: dotnet restore --packages ./.nuget/packages -s "https://api.nuget.org/v3/index.json"

    - name: Clean Debug
      run: dotnet clean --configuration Debug

    - name: Build Debug
      run: dotnet build --configuration Debug --no-restore --packages ./.nuget/packages

    - name: Unit Tests
      run: dotnet test --configuration Debug --no-build --filter TestCategory=Unit

  build_publish:
    # if: ${{ startsWith(github.ref_name, 'prerelease') || startsWith(github.ref_name, 'release') }}
    runs-on: ubuntu-latest
    needs: [unit_tests]
    steps:
    - uses: actions/checkout@v4

    - name: Setup .Net
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.x

    - name: Setup Environment Variables
      run: |
        github_sha_hash=${{ github.sha }}

        git_hash="${github_sha_hash:0:7}"

        printf -v jdate '%(%y%j.%H%m)T\n'

        branch_name=${{github.ref_name}}

        values=(${branch_name//_/ })

        branch=$values[0]
        version=$values[1]

        if [$branch == 'release']; then
          branch_version="${version}+${git_hash}"
        elif [$branch == 'dev']; then
          branch_version="9.0-pre.${jdate}+${git_hash}"
        else
          branch_version="${version}-pre.${jdate}+${git_hash}"
        fi

        echo"BRANCH_VERSION=${branch_version}" >> "$GITHUB_ENV"

    - name: Restore Nuget Packages
      run: dotnet restore --packages ./.nuget/packages -s "https://api.nuget.org/v3/index.json"

    - name: Clean Release
      run: dotnet clean --configuration Release

    - name: Build Release
      run: dotnet build --configuration Release --no-restore -p:Version="$BRANCH_VERSION" -p:PublishRepositoryUrl=true
